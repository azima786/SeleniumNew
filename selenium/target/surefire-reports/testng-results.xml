<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="5" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-19T10:44:02 CDT" name="Surefire suite" finished-at="2022-09-19T10:44:43 CDT" duration-ms="41003">
    <groups>
      <group name="Purchase">
        <method signature="submitTest.submitOrder(java.util.HashMap)[pri:0, instance:com.end2end.submitTest@a36ebd55]" name="submitOrder" class="com.end2end.submitTest"/>
      </group> <!-- Purchase -->
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.TestNGTestRunner@a869e943]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-09-19T10:44:02 CDT" name="Surefire test" finished-at="2022-09-19T10:44:43 CDT" duration-ms="41003">
      <class name="com.end2end.submitTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.end2end.submitTest@a36ebd55]" started-at="2022-09-19T10:44:02 CDT" name="launchApplication" finished-at="2022-09-19T10:44:09 CDT" duration-ms="6827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.end2end.submitTest@a36ebd55]" started-at="2022-09-19T10:44:09 CDT" name="submitOrder" data-provider="getData" finished-at="2022-09-19T10:44:19 CDT" duration-ms="9876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Abc123456$, email=ak123@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.end2end.submitTest@a36ebd55]" started-at="2022-09-19T10:44:19 CDT" name="launchApplication" finished-at="2022-09-19T10:44:24 CDT" duration-ms="4626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.end2end.submitTest@a36ebd55]" started-at="2022-09-19T10:44:24 CDT" name="submitOrder" data-provider="getData" finished-at="2022-09-19T10:44:34 CDT" duration-ms="9881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, email=shetty@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.end2end.submitTest@a36ebd55]" started-at="2022-09-19T10:44:34 CDT" name="launchApplication" finished-at="2022-09-19T10:44:38 CDT" duration-ms="4521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:com.end2end.submitTest@a36ebd55]" started-at="2022-09-19T10:44:38 CDT" name="OrderHistoryTest" finished-at="2022-09-19T10:44:42 CDT" depends-on-methods="com.end2end.submitTest.submitOrder" duration-ms="3796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.end2end.submitTest@a36ebd55]" started-at="2022-09-19T10:44:42 CDT" name="tearDown" finished-at="2022-09-19T10:44:43 CDT" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.end2end.submitTest -->
      <class name="com.cucumber.TestNGTestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.cucumber.TestNGTestRunner@a869e943]" started-at="2022-09-19T10:44:02 CDT" name="setUpClass" finished-at="2022-09-19T10:44:02 CDT" duration-ms="421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6f7ff36]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.TestNGTestRunner@a869e943]" started-at="2022-09-19T10:44:02 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-09-19T10:44:02 CDT" duration-ms="82" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Positive Test of Submitting the order"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Purchase the order from Ecomerce Website"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'I landed on Ecommerce Page' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I landed on Ecommerce Page")
public void i_landed_on_ecommerce_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("Logged in with username ak123@gmail.com and password Abc123456$")
public void logged_in_with_username_ak123_gmail_com_and_password_abc123456$() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I add product ZARA COAT {int} from Cart")
public void i_add_product_zara_coat_from_cart(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("checkout ZARA COAT {int} and submit the order")
public void checkout_zara_coat_and_submit_the_order(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("{string} message is displayed on ConfirmationPage")
public void message_is_displayed_on_confirmation_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'I landed on Ecommerce Page' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I landed on Ecommerce Page")
public void i_landed_on_ecommerce_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("Logged in with username ak123@gmail.com and password Abc123456$")
public void logged_in_with_username_ak123_gmail_com_and_password_abc123456$() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I add product ZARA COAT {int} from Cart")
public void i_add_product_zara_coat_from_cart(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("checkout ZARA COAT {int} and submit the order")
public void checkout_zara_coat_and_submit_the_order(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("{string} message is displayed on ConfirmationPage")
public void message_is_displayed_on_confirmation_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.testng.TestCaseResultObserver$$Lambda$325/0000000000000000.apply(Unknown Source)
at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.testng.TestNGCucumberRunner$$Lambda$274/0000000000000000.accept(Unknown Source)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:129)
at io.cucumber.core.runtime.CucumberExecutionContext$$Lambda$275/0000000000000000.run(Unknown Source)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:129)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$66/0000000000000000.accept(Unknown Source)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.cucumber.TestNGTestRunner@a869e943]" started-at="2022-09-19T10:44:02 CDT" name="tearDownClass" finished-at="2022-09-19T10:44:02 CDT" duration-ms="92" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.cucumber.TestNGTestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
